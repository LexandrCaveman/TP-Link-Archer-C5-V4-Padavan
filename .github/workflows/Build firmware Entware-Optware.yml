name: Build firmware Entware-Optware

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00 UTC
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    container: registry.gitlab.com/hadzhioglu/padavan-ng
    defaults: { run: { shell: bash } }
    steps:
    - uses: actions/checkout@v4

    - name: Get variables
      run: |
        sed -i 's|\r$||g' variables "build Entware-Optware.config"
        cp "build Entware-Optware.config" build.config
        . <(cat build.config)
        PADAVAN_THEMES="${PADAVAN_THEMES[*]}"
        for v in "${!PADAVAN_@}" "${!CONFIG_@}"; do
          echo "$v=${!v}" >> $GITHUB_ENV
        done

    - name: Download sources and toolchain
      run: |
        git config --global --add safe.directory '*'
        git clone -b "$PADAVAN_BRANCH" "$PADAVAN_REPO"
        git -C padavan-ng checkout "$PADAVAN_COMMIT"
        wget -qO- "$PADAVAN_TOOLCHAIN_URL" | tar -C padavan-ng --zstd -xf -

    - name: Install themes
      run: |
        if [[ -n $PADAVAN_THEMES ]]; then
          git clone --depth 1 -b "$PADAVAN_THEMES_BRANCH" "$PADAVAN_THEMES_REPO" themes
          cp -r themes/common-theme themes/jquery.js padavan-ng/trunk/user/www/n56u_ribbon_fixed

          for theme in $PADAVAN_THEMES; do
            echo "Installing $theme theme"
            cp -r "themes/$theme-theme" padavan-ng/trunk/user/www/n56u_ribbon_fixed
          done
        fi

    - name: Run custom pre-build script
      run: '[[ -f pre-build.sh ]] && . pre-build.sh || :'

    - name: Build firmware
      run: |
        cp build.config padavan-ng/trunk/.config
        pushd padavan-ng/trunk
        ./clear_tree.sh
        ./build_firmware.sh
        popd

    - name: Run custom post-build script
      run: '[[ -f post-build.sh ]] && . post-build.sh || :'

    - name: Prepare artifacts
      run: |
        FW_FILE_NAME="$(find padavan-ng/trunk/images -type f -regextype posix-extended -iregex ".*\.(trx|bin)$" \
                        -printf "%T@\t%f\n" | sort -V | tail -1 | cut -f2)"
        cp "padavan-ng/trunk/images/$FW_FILE_NAME" .
        
        # Create 128KB empty file and recovery firmware
        dd if=/dev/zero of=128kempty.bin bs=128k count=1
        cat 128kempty.bin "$FW_FILE_NAME" > tp_recovery.bin
        
        # Download TFTP server
        wget -O tftpd64.464.zip https://bitbucket.org/phjounin/tftpd64/downloads/tftpd64.464.zip
        
        echo "FW_FILE_NAME=$FW_FILE_NAME" >> $GITHUB_ENV
        echo "BUILD_TIMESTAMP=$(date '+%Y.%m.%d_%H.%M.%S')" >> $GITHUB_ENV

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: padavan-ng_${{ env.CONFIG_VENDOR }}_${{ env.CONFIG_FIRMWARE_PRODUCT_ID }}_${{ env.BUILD_TIMESTAMP }}
        retention-days: 7
        path: |
          ${{ env.FW_FILE_NAME }}
          tp_recovery.bin
          tftpd64.464.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ env.BUILD_TIMESTAMP }}
        release_name: Padavan TP-Link Archer C5 V4 Entware (${{ env.BUILD_TIMESTAMP }})
        body: |
          ## üíù –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É

          –ï—Å–ª–∏ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –ø—Ä–æ—à–∏–≤–∫–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É:

          - [–ö—É–ø–∏—Ç—å –∫–æ—Ñ–µ](https://pay.cloudtips.ru/p/afb55f71)
          - [–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞ Boosty](https://boosty.to/danayer)

          üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø—Ä–æ—à–∏–≤–∫–∏
          
          üî∞ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞:

              üõ°Ô∏è –û—Ç–∫–ª—é—á–∞–µ–º –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä
              üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–∞–±–µ–ª—å –≤ LAN –ø–æ—Ä—Ç
              ‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º IP: 192.168.0.66
              üíø –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º Tftpd64
              üìÅ –ö–æ–ø–∏—Ä—É–µ–º tp_recovery.bin –≤ –ø–∞–ø–∫—É TFTP


          üìù –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ—à–∏–≤–∫–∏:

              üîå –í—ã–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä
              ‚ö° –ó–∞–∂–∏–º–∞–µ–º Reset + –≤–∫–ª—é—á–∞–µ–º –ø–∏—Ç–∞–Ω–∏–µ
              ‚è≤Ô∏è –ñ–¥–µ–º 10-15 —Å–µ–∫—É–Ω–¥
              üîÑ –û—Ç–ø—É—Å–∫–∞–µ–º Reset
              üìä –°–ª–µ–¥–∏–º –∑–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–º –ø—Ä–æ—à–∏–≤–∫–∏ –≤ –æ–∫–Ω–µ Tftpd64
              ‚úÖ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—à–∏–≤–∫–∏


          ‚ö†Ô∏è –í–∞–∂–Ω–æ: –ü–æ—Å–ª–µ –ø—Ä–æ—à–∏–≤–∫–∏ –≤–µ—Ä–Ω–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ IP


          üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–∏–≤–∫–∏
          üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏:

              üì± –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Ä–æ—É—Ç–µ—Ä—É –ø–æ –∫–∞–±–µ–ª—é LAN (–Ω–µ –ø–æ Wi-Fi!)
              üåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å http://192.168.1.1
              ‚öôÔ∏è –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ -> –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–∏–≤–∫–∏
              üì¶ –°–∫–∞—á–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é –ø—Ä–æ—à–∏–≤–∫–∏ —Å GitHub Releases
              üì§ –í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª .bin (–Ω–µ –∞—Ä—Ö–∏–≤!)
              ‚úÖ –ù–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å" –∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ (3-5 –º–∏–Ω—É—Ç)


          üí° –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ü–µ—Ä–≤–∞—è –ø—Ä–æ—à–∏–≤–∫–∞ —á–µ—Ä–µ–∑ TFTP –Ω—É–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑. –í—Å–µ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.

          ## üìö –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Entware/Optware

          Entware ‚Äî —ç—Ç–æ –ø–µ—Ä–µ–¥–æ–≤–æ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –ª–µ–≥–∫–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å Linux-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏ —Ä–æ—É—Ç–µ—Ä–∞. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–µ–≥–æ Optware, Entware —Ä–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è.

          ### üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ USB-–Ω–æ—Å–∏—Ç–µ–ª—è
          1. –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∞ USB –≤ Ext2/3/4
          2. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É opt –≤ –∫–æ—Ä–Ω–µ:
          ```bash
          mkdir /media/Main/opt
          ejusb
          ```

          ### ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏
          - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è USB > –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          - –í—ã–±–µ—Ä–∏—Ç–µ "Entware" –∏–ª–∏ "Optware" –≤ "–†–∞–∑—Ä–µ—à–∏—Ç—å –∑–∞–ø—É—Å–∫ Optware?"
          - –ù–∞–∂–º–∏—Ç–µ "–ü—Ä–∏–º–µ–Ω–∏—Ç—å"

          ### üì• –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤
          ```bash
          # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
          opkg update

          # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–∞ (–ø—Ä–∏–º–µ—Ä: mc)
          opkg install mc

          # –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–∞
          opkg remove mc

          # –ü–æ–∏—Å–∫ –ø–∞–∫–µ—Ç–æ–≤
          opkg find "*game*"
          ```

          ### üîÑ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
          - –°–∫—Ä–∏–ø—Ç—ã –≤ /opt/etc/init.d –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
          - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã start/stop
          - –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ —Å–∫—Ä–∏–ø—Ç—ã

          ### üí° –ü–æ–ª–µ–∑–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
          - /opt/share/www/custom - –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–µ–±-–∫–æ–Ω—Ç–µ–Ω—Ç–∞
          - /opt/etc/profile - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH/Telnet —Å–µ—Å—Å–∏–∏
          - /opt/home/admin - –¥–æ–º–∞—à–Ω—è—è –ø–∞–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          - /opt/bin/on_wps.sh - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è WPS
          - /opt/bin/on_hotplug_printer.sh - –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤
          - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ SWAP-—Ñ–∞–π–ª–∞ (/opt/.swap)
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.FW_FILE_NAME }}
        asset_name: ${{ env.FW_FILE_NAME }}
        asset_content_type: application/octet-stream

    - name: Upload Recovery Firmware Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tp_recovery.bin
        asset_name: tp_recovery.bin
        asset_content_type: application/octet-stream

    - name: Upload TFTP Server Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tftpd64.464.zip
        asset_name: tftpd64.464.zip
        asset_content_type: application/zip

    - name: Check firmware size
      run: |
        partitions=padavan-ng/trunk/configs/boards/$CONFIG_VENDOR/$CONFIG_FIRMWARE_PRODUCT_ID/partitions.config
        max_fw_size="$(awk '/Firmware/ { getline; getline; sub(",", ""); print strtonum($2); }' "$partitions")"
        fw_size="$(stat -c %s "$FW_FILE_NAME")"

        if ((fw_size > max_fw_size)); then
          fw_size_fmtd="$(numfmt --grouping "$fw_size") bytes"
          max_fw_size_fmtd="$(numfmt --grouping "$max_fw_size") bytes"
          echo "Firmware size ($fw_size_fmtd) exceeds max size ($max_fw_size_fmtd) for your target device"
          exit 1
        fi
